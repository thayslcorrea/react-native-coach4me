{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\zz4ff\\\\Documents\\\\IFSe\\\\Projetos\\\\reactnative\\\\react-native-coach4me\\\\mobile\\\\node_modules\\\\react-native-gesture-handler\\\\createNativeWrapper.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport NativeViewGestureHandler from \"./NativeViewGestureHandler\";\nvar NATIVE_WRAPPER_PROPS_FILTER = ['id', 'minPointers', 'enabled', 'waitFor', 'simultaneousHandlers', 'shouldCancelWhenOutside', 'hitSlop', 'onGestureEvent', 'onHandlerStateChange', 'onBegan', 'onFailed', 'onCancelled', 'onActivated', 'onEnded', 'shouldActivateOnStart', 'disallowInterruption', 'onGestureHandlerEvent', 'onGestureHandlerStateChange'];\nexport default function createNativeWrapper(Component) {\n  var _this = this;\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ComponentWrapper = React.forwardRef(function (props, ref) {\n    var gestureHandlerProps = Object.keys(props).reduce(function (res, key) {\n      if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\n        res[key] = props[key];\n      }\n      return res;\n    }, _objectSpread({}, config));\n    return React.createElement(NativeViewGestureHandler, _extends({}, gestureHandlerProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }), React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    })));\n  });\n  ComponentWrapper.propTypes = _objectSpread({}, Component.propTypes);\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\n  return ComponentWrapper;\n}","map":{"version":3,"names":["React","NativeViewGestureHandler","NATIVE_WRAPPER_PROPS_FILTER","createNativeWrapper","Component","_this","config","arguments","length","undefined","ComponentWrapper","forwardRef","props","ref","gestureHandlerProps","Object","keys","reduce","res","key","indexOf","_objectSpread","createElement","_extends","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","displayName"],"sources":["C:/Users/zz4ff/Documents/IFSe/Projetos/reactnative/react-native-coach4me/mobile/node_modules/react-native-gesture-handler/createNativeWrapper.js"],"sourcesContent":["import React from 'react';\n\nimport NativeViewGestureHandler from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  'id',\n  'minPointers',\n  'enabled',\n  'waitFor',\n  'simultaneousHandlers',\n  'shouldCancelWhenOutside',\n  'hitSlop',\n  'onGestureEvent',\n  'onHandlerStateChange',\n  'onBegan',\n  'onFailed',\n  'onCancelled',\n  'onActivated',\n  'onEnded',\n  'shouldActivateOnStart',\n  'disallowInterruption',\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n];\n\nexport default function createNativeWrapper(Component, config = {}) {\n  const ComponentWrapper = React.forwardRef((props, ref) => {\n    // filter out props that should be passed to gesture handler wrapper\n    const gestureHandlerProps = Object.keys(props).reduce(\n      (res, key) => {\n        if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\n          res[key] = props[key];\n        }\n        return res;\n      },\n      { ...config } // watch out not to modify config\n    );\n    return (\n      <NativeViewGestureHandler {...gestureHandlerProps}>\n        <Component {...props} ref={ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  ComponentWrapper.propTypes = {\n    ...Component.propTypes,\n  };\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,wBAAwB;AAS/B,IAAMC,2BAA2B,GAAG,CAClC,IAAI,EACJ,aAAa,EACb,SAAS,EACT,SAAS,EACT,sBAAsB,EACtB,yBAAyB,EACzB,SAAS,EACT,gBAAgB,EAChB,sBAAsB,EACtB,SAAS,EACT,UAAU,EACV,aAAa,EACb,aAAa,EACb,SAAS,EACT,uBAAuB,EACvB,sBAAsB,EACtB,uBAAuB,EACvB,6BAA6B,CAC9B;AAED,eAAe,SAASC,mBAAmBA,CAACC,SAAS,EAAe;EAAA,IAAAC,KAAA;EAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAChE,IAAMG,gBAAgB,GAAGV,KAAK,CAACW,UAAU,CAAC,UAACC,KAAK,EAAEC,GAAG,EAAK;IAExD,IAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,MAAM,CACnD,UAACC,GAAG,EAAEC,GAAG,EAAK;MACZ,IAAIjB,2BAA2B,CAACkB,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QACnDD,GAAG,CAACC,GAAG,CAAC,GAAGP,KAAK,CAACO,GAAG,CAAC;MACvB;MACA,OAAOD,GAAG;IACZ,CAAC,EAAAG,aAAA,KACIf,MAAM,CACb,CAAC;IACD,OACEN,KAAA,CAAAsB,aAAA,CAACrB,wBAAwB,EAAAsB,QAAA,KAAKT,mBAAmB;MAAAU,MAAA,EAAAnB,KAAA;MAAAoB,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IAC/C7B,KAAA,CAAAsB,aAAA,CAAClB,SAAS,EAAAmB,QAAA,KAAKX,KAAK;MAAEC,GAAG,EAAEA,GAAI;MAAAW,MAAA,EAAAnB,KAAA;MAAAoB,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAE,CACT,CAAC;EAE/B,CAAC,CAAC;EAEFnB,gBAAgB,CAACoB,SAAS,GAAAT,aAAA,KACrBjB,SAAS,CAAC0B,SAAS,CACvB;EACDpB,gBAAgB,CAACqB,WAAW,GAAG3B,SAAS,CAAC2B,WAAW,IAAI,kBAAkB;EAE1E,OAAOrB,gBAAgB;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}