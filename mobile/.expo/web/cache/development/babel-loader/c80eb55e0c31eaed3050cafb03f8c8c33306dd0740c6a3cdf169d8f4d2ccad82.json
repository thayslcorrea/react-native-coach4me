{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport ExpoSplashScreen from \"./ExpoSplashScreen\";\nexport function preventAutoHideAsync() {\n  return _regeneratorRuntime.async(function preventAutoHideAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (ExpoSplashScreen.preventAutoHideAsync) {\n            _context.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(ExpoSplashScreen.preventAutoHideAsync());\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function hideAsync() {\n  return _regeneratorRuntime.async(function hideAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (ExpoSplashScreen.hideAsync) {\n            _context2.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n        case 2:\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(ExpoSplashScreen.hideAsync());\n        case 4:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function hide() {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\nexport function preventAutoHide() {\n  console.warn('SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()');\n  preventAutoHideAsync();\n}","map":{"version":3,"names":["UnavailabilityError","ExpoSplashScreen","preventAutoHideAsync","_regeneratorRuntime","async","preventAutoHideAsync$","_context","prev","next","awrap","abrupt","sent","stop","Promise","hideAsync","hideAsync$","_context2","hide","console","warn","preventAutoHide"],"sources":["C:\\Users\\zz4ff\\Documents\\IFSe\\Projetos\\reactnative\\react-native-coach4me\\mobile\\node_modules\\expo-splash-screen\\src\\SplashScreen.ts"],"sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport ExpoSplashScreen from './ExpoSplashScreen';\n\n/**\n * Makes the native splash screen stay visible until `SplashScreen.hideAsync()` is called.\n * It has to be called before any view is rendered.\n *\n * @example\n * ```typescript\n * // top level component\n *\n * SplashScreen.preventAutoHideAsync()\n *  .then(result => console.log(`SplashScreen.preventAutoHideAsync() succeeded: ${result}`))\n *  .catch(console.warn); // it's good to explicitly catch and inspect any error\n *\n * class App extends React.Component {\n *   ...\n *   // Hide SplashScreen once your app content is ready to be displayed.\n *   await SplashScreen.hideAsync()\n *   ...\n * }\n * ```\n */\nexport async function preventAutoHideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.preventAutoHideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n  }\n  return await ExpoSplashScreen.preventAutoHideAsync();\n}\n\nexport async function hideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.hideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n  }\n  return await ExpoSplashScreen.hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.hideAsync()` instead\n */\nexport function hide(): void {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.preventAutoHideAsync()` instead\n */\nexport function preventAutoHide(): void {\n  console.warn(\n    'SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()'\n  );\n  preventAutoHideAsync();\n}\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,kBAAkB;AAEtD,OAAOC,gBAAgB;AAsBvB,OAAO,SAAeC,oBAAoBA,CAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,sBAAAC,QAAA;IAAA;MAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,IACnCP,gBAAgB,CAACC,oBAAoB;YAAAI,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MAClC,IAAIR,mBAAmB,CAAC,oBAAoB,EAAE,sBAAsB,CAAC;QAAA;UAAAM,QAAA,CAAAE,IAAA;UAAA,OAAAL,mBAAA,CAAAM,KAAA,CAEhER,gBAAgB,CAACC,oBAAoB,EAAE;QAAA;UAAA,OAAAI,QAAA,CAAAI,MAAA,WAAAJ,QAAA,CAAAK,IAAA;QAAA;QAAA;UAAA,OAAAL,QAAA,CAAAM,IAAA;MAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AAGtD,OAAO,SAAeC,SAASA,CAAA;EAAA,OAAAX,mBAAA,CAAAC,KAAA,UAAAW,WAAAC,SAAA;IAAA;MAAA,QAAAA,SAAA,CAAAT,IAAA,GAAAS,SAAA,CAAAR,IAAA;QAAA;UAAA,IACxBP,gBAAgB,CAACa,SAAS;YAAAE,SAAA,CAAAR,IAAA;YAAA;UAAA;UAAA,MACvB,IAAIR,mBAAmB,CAAC,oBAAoB,EAAE,WAAW,CAAC;QAAA;UAAAgB,SAAA,CAAAR,IAAA;UAAA,OAAAL,mBAAA,CAAAM,KAAA,CAErDR,gBAAgB,CAACa,SAAS,EAAE;QAAA;UAAA,OAAAE,SAAA,CAAAN,MAAA,WAAAM,SAAA,CAAAL,IAAA;QAAA;QAAA;UAAA,OAAAK,SAAA,CAAAJ,IAAA;MAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA;AAM3C,OAAM,SAAUI,IAAIA,CAAA;EAClBC,OAAO,CAACC,IAAI,CAAC,yEAAyE,CAAC;EACvFL,SAAS,EAAE;AACb;AAKA,OAAM,SAAUM,eAAeA,CAAA;EAC7BF,OAAO,CAACC,IAAI,CACV,+FAA+F,CAChG;EACDjB,oBAAoB,EAAE;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}