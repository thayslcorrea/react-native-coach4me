{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport Hammer from '@egjs/hammerjs';\nimport State from \"../State\";\nimport { CONTENT_TOUCHES_DELAY, CONTENT_TOUCHES_QUICK_TAP_END_DELAY } from \"./constants\";\nimport DiscreteGestureHandler from \"./DiscreteGestureHandler\";\nimport { fireAfterInterval, isValidNumber, isnan } from \"./utils\";\nvar PressGestureHandler = function (_DiscreteGestureHandl) {\n  _inherits(PressGestureHandler, _DiscreteGestureHandl);\n  var _super = _createSuper(PressGestureHandler);\n  function PressGestureHandler() {\n    var _this;\n    _classCallCheck(this, PressGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.shouldDelayTouches = true;\n    return _this;\n  }\n  _createClass(PressGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'press';\n    }\n  }, {\n    key: \"minDurationMs\",\n    get: function get() {\n      return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n  }, {\n    key: \"maxDist\",\n    get: function get() {\n      return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Press;\n    }\n  }, {\n    key: \"simulateCancelEvent\",\n    value: function simulateCancelEvent(inputData) {\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(_ref) {\n      var shouldCancelWhenOutside = _ref.shouldCancelWhenOutside,\n        maxDistSq = _ref.maxDistSq;\n      return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var _Hammer$INPUT_START$H;\n      return (_Hammer$INPUT_START$H = {}, _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_START, State.BEGAN), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_MOVE, State.ACTIVE), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_END, State.END), _defineProperty(_Hammer$INPUT_START$H, Hammer.INPUT_CANCEL, State.CANCELLED), _Hammer$INPUT_START$H)[type];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this._hasCustomActivationCriteria) {\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(PressGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        time: this.minDurationMs\n      });\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n  }, {\n    key: \"shouldDelayTouchForEvent\",\n    value: function shouldDelayTouchForEvent(_ref2) {\n      var pointerType = _ref2.pointerType;\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n  }, {\n    key: \"onGestureStart\",\n    value: function onGestureStart(ev) {\n      var _this2 = this;\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = fireAfterInterval(function () {\n        _this2.sendGestureStartedEvent(_this2.initialEvent);\n        _this2.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n    }\n  }, {\n    key: \"sendGestureStartedEvent\",\n    value: function sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n        eventType: Hammer.INPUT_MOVE,\n        isFirst: true\n      }));\n    }\n  }, {\n    key: \"forceInvalidate\",\n    value: function forceInvalidate(event) {\n      _get(_getPrototypeOf(PressGestureHandler.prototype), \"forceInvalidate\", this).call(this, event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this3 = this;\n      _get(_getPrototypeOf(PressGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n      if (ev.isFinal && this.isGestureRunning) {\n        var timeout;\n        if (this.visualFeedbackTimer) {\n          timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n          this.sendGestureStartedEvent(this.initialEvent);\n          this.initialEvent = null;\n        }\n        fireAfterInterval(function () {\n          _this3.sendEvent(_objectSpread(_objectSpread({}, ev), {}, {\n            eventType: Hammer.INPUT_END,\n            isFinal: true\n          }));\n          _this3.onGestureEnded();\n        }, timeout);\n      }\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$shouldActivateO = _ref3.shouldActivateOnStart,\n        shouldActivateOnStart = _ref3$shouldActivateO === void 0 ? false : _ref3$shouldActivateO,\n        _ref3$disallowInterru = _ref3.disallowInterruption,\n        disallowInterruption = _ref3$disallowInterru === void 0 ? false : _ref3$disallowInterru,\n        _ref3$shouldCancelWhe = _ref3.shouldCancelWhenOutside,\n        shouldCancelWhenOutside = _ref3$shouldCancelWhe === void 0 ? true : _ref3$shouldCancelWhe,\n        _ref3$minDurationMs = _ref3.minDurationMs,\n        minDurationMs = _ref3$minDurationMs === void 0 ? Number.NaN : _ref3$minDurationMs,\n        _ref3$maxDist = _ref3.maxDist,\n        maxDist = _ref3$maxDist === void 0 ? Number.NaN : _ref3$maxDist,\n        _ref3$minPointers = _ref3.minPointers,\n        minPointers = _ref3$minPointers === void 0 ? 1 : _ref3$minPointers,\n        _ref3$maxPointers = _ref3.maxPointers,\n        maxPointers = _ref3$maxPointers === void 0 ? 1 : _ref3$maxPointers,\n        props = _objectWithoutProperties(_ref3, [\"shouldActivateOnStart\", \"disallowInterruption\", \"shouldCancelWhenOutside\", \"minDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"]);\n      return _get(_getPrototypeOf(PressGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        shouldActivateOnStart: shouldActivateOnStart,\n        disallowInterruption: disallowInterruption,\n        shouldCancelWhenOutside: shouldCancelWhenOutside,\n        minDurationMs: minDurationMs,\n        maxDist: maxDist,\n        minPointers: minPointers,\n        maxPointers: maxPointers\n      }, props));\n    }\n  }]);\n  return PressGestureHandler;\n}(DiscreteGestureHandler);\nexport default PressGestureHandler;","map":{"version":3,"names":["Hammer","State","CONTENT_TOUCHES_DELAY","CONTENT_TOUCHES_QUICK_TAP_END_DELAY","DiscreteGestureHandler","fireAfterInterval","isValidNumber","isnan","PressGestureHandler","_DiscreteGestureHandl","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","shouldDelayTouches","_createClass","key","get","config","minDurationMs","maxDist","Press","value","simulateCancelEvent","inputData","hasGestureFailed","cancelEvent","updateHasCustomActivationCriteria","_ref","shouldCancelWhenOutside","maxDistSq","getState","type","_Hammer$INPUT_START$H","_defineProperty","INPUT_START","BEGAN","INPUT_MOVE","ACTIVE","INPUT_END","END","INPUT_CANCEL","CANCELLED","getConfig","_hasCustomActivationCriteria","getHammerConfig","_objectSpread","_get","_getPrototypeOf","prototype","time","onGestureActivated","ev","onGestureStart","shouldDelayTouchForEvent","_ref2","pointerType","_this2","isGestureRunning","clearTimeout","visualFeedbackTimer","initialEvent","sendGestureStartedEvent","sendEvent","eventType","isFirst","forceInvalidate","event","onRawEvent","_this3","isFinal","timeout","onGestureEnded","updateGestureConfig","_ref3","_ref3$shouldActivateO","shouldActivateOnStart","_ref3$disallowInterru","disallowInterruption","_ref3$shouldCancelWhe","_ref3$minDurationMs","Number","NaN","_ref3$maxDist","_ref3$minPointers","minPointers","_ref3$maxPointers","maxPointers","props","_objectWithoutProperties"],"sources":["C:/Users/zz4ff/Documents/IFSe/Projetos/reactnative/react-native-coach4me/mobile/node_modules/react-native-gesture-handler/web/PressGestureHandler.js"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport State from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({ shouldCancelWhenOutside, maxDistSq }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type) {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n\n  sendGestureStartedEvent(ev) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (ev.isFinal && this.isGestureRunning) {\n      let timeout;\n      if (this.visualFeedbackTimer) {\n        // Aesthetic timing for a quick tap.\n        // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n        // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n        timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }\n      fireAfterInterval(() => {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_END,\n          isFinal: true,\n        });\n        this.onGestureEnded();\n      }, timeout);\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}